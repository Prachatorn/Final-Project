}
CI[i, ] <- quantile(bootstat, c(0.05 / 2, (1 - 0.05 / 2)))
}
source('~/.active-rstudio-document', echo=TRUE)
CI[i, ] <- quantile(boot.stat, c(0.05 / 2, (1 - 0.05 / 2)))
for (i in 1:n.trial) {
sample.trial <- sample(pop, sample.size)
n.boot <- 100
boot.stat <- numeric(n.boot)
for(j in 1:n.boot) {
boot.sample <- sample(sample.trial, sample.size, replace = T)
boot.stat[j] <- mean(boot.sample)
}
CI[i, ] <- quantile(boot.stat, c(0.05 / 2, (1 - 0.05 / 2)))
}
count <- 0
for (i in 1:n.trial) {
if(CI[i, 1] <= pop.mean & CI[i, 2] >= pop.mean) {
count <- count + 1
}
count
}
count <- 0
for (i in 1:n.trial) {
if(CI[i, 1] <= pop.mean & CI[i, 2] >= pop.mean) {
count <- count + 1
}
count
}
count
count
for (1 in 2:n.trial) {
lines(c(i, i), CI[i, ])
}
for (1 in 2:n.trial) {
lines(c(i, i), CI[i, ])
}
abline(h = pop.mean, col = 'red', lwd = 2)
plot(c(1, 1), CI[i, ], ylim = c(0.3, 1.2), xlim = c(0, 101), ylab = "CI",
xlab = '', type = "l")
for (1 in 2:n.trial) {
lines(c(i, i), CI[i, ])
}
for (i in 2:n.trial) {
lines(c(i, i), CI[i, ])
}
abline(h = pop.mean, col = 'red', lwd = 2)
toothpaste <-  c(0.52, 0.65, 0.46, 0.50, 0.37)
mean(toothpaste)
sd(toothpaste)
mean(toothpaste) + (2.35 * (sd(toothpaste) / 4)
mean(toothpaste) + (2.35 * (sd(toothpaste) / 4))
mean(toothpaste) + (2.35 * (sd(toothpaste) / 4))
mean(toothpaste) + (2.35 * (sd(toothpaste) / 2))
mean(toothpaste) + (2.35 * (sd(toothpaste) / sqrt(4)))
(0.5 - 0.55) / (0.1017 / sqrt(4))
(0.5 - 0.55) / (sd(toothpaste) / sqrt(4))
(0.5 - 0.55) / (sd(toothpaste) / sqrt(4))
toothpaste <-  c(0.52, 0.65, 0.46, 0.50, 0.37)
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shinyUI(
navbarPage(
"Midwest",
tabPanel(
"Table description",
titlePanel("State and County Table"),
sidebarLayout(
sidebarPanel(
textInput(
"state_search",
label = "Find a state",
value = ""
),
textInput(
"county_search",
label = "Find a county",
value = ""
)
),
mainPanel(
tableOutput("Table Description")
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
midwest_data <- midwest
View(midwest_data)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
colnames(midwest)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
# Reading in the dataset
midwest <- midwest
shinyUI(
navbarPage(
"Midwest",
tabPanel(
"Table description",
titlePanel("State and County Table"),
sidebarLayout(
sidebarPanel(
textInput(
"state_search",
label = "Find a state",
value = ""
),
textInput(
"county_search",
label = "Find a county",
value = ""
)
),
mainPanel(
tableOutput("Table Description")
)
)
),
tabPanel(
"Scatter",
titlePanel("Percent Poverty For Children vs Adults"),
sidebarLayout(
sidebarPanel(
textInput(
"search",
label = "Find a State",
value = ""
),
textInput(
"search",
label = "Find a County",
value = ""
),
mainPanel(
plotlyOutput("scatter")
)
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
library(plotly)
library(plotly)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Exercises/exercises-Prachatorn/chapter-19-exercises/exercise-7')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
state_data <- function(state_choice) {
choice <- midwest_data %>%
filter(
state == state_choice
)
}
textInput(
"state_search",
label = "Find a state",
value = ""
),
mainPanel(
tableOutput("Table")
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
library(knitr)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shinyUI(
navbarPage(
"Midwest",
tabPanel(
"Table",
titlePanel("State and County Table"),
sidebarLayout(
sidebarPanel(
textInput(
"state_search",
label = "Find a state",
value = ""
)
),
mainPanel(
kable(tableOutput("Table"))
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
return(input$state_search)
shinyServer(function(input, output) {
output$Table <- renderTable({
state_data <- function(state_choice) {
choice <- midwest_data %>%
filter(
state == state_choice
)
}
return(input$state_search)
})
}
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Exercises/exercises-Prachatorn/chapter-19-exercises/exercise-1')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
View(midwest)
colnames(midwest)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
?plot
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
?plot_ly
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
output$Scatter <- renderPlotly({
if (input$state_search %in% midwest$state) {
choice2 <- midwest %>%
filter(
state == input$state_search
)
make_plot <- plotly(
choice2$percchildbelowpovert,
choice2$percadultpoverty,
xlab = "Children Below Poverty Percentage",
ylab = "Adult Below Poverty Percentage",
main = paste0("Poverty Percentage Between Children and Adults in ",
input$state_search))
} else {
choice2 <- "Not Available"
}
return(choice2)
})
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
choice2 <- midwest %>%
filter(
state == "IL"
)
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers"
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = county
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0(county)
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0("county: ", county)
)
make_plot
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
shinyServer(function(input, output) {
output$Table <- renderTable({
if (input$state_search %in% midwest$state) {
choice <- midwest_data %>%
filter(
state == input$state_search
)
if (input$county_search %in% midwest$county) {
choice <- choice %>%
filter(
county == input$county_search
)
} else {
return(choice)
}
} else {
choice <- "Not Available"
}
return(choice)
})
output$Scatter <- renderPlotly({
state_data <- midwest %>%
filter(
state == input$state_search
)
make_plot <- plot_ly(
data = state_data,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0("county: ", county)
)
return(make_plot)
})
output$Bar_Graph <- renderPlot({
if(input$state_search %in% midwest$state &
input$county_search %in% midwest$county) {
separate <- midwest %>%
filter(
state == input$state_search,
county == input$county_search
)
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
percrace <- as.data.frame(percrace)
bar_graph <- ggplot(hello) +
geom_bar(mapping = aes(race, percvalue), stat = "identity")
return(bar_graph)
} else {
data <- "Not Available"
return(data)
}
})
})
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
separate <- midwest %>%
filter(
state == "IL",
county == "ADAMS"
)
hello <- list()
hello$race <- c("white", "black", "amerindan", "asian", "other")
hello$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
hello <- as.data.frame(hello)
bar_graph <- ggplot(hello) +
geom_col(mapping = aes(race, percvalue), stat = "identity")
hello <- as.data.frame(hello)
bar_graph <- ggplot(hello) +
geom_col(mapping = aes(race, percvalue))
bar_graph
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
percrace$colors <- c("red", "blue", "green", "yellow", "purple")
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
sample.mean <- c(10.5, 14.8, 15.7, 10.0, 21.6)
sample.sd <- c(4.5, 6.8, 6.5, 6.7, 6.0)
aov.1 <- aov(sample.mean)
aov.1 <- aov(sample.mean~sample.sd)
aov.1
sumarry(aov.1)
summary(aov.1)
aov.1 <- aov(sample.mean)
aov.1 <- aov(sample.sd~sample.mean)
summary(aov.1)
sse(sample.mean)
sse(sample.mean, sample())
x <- c(89, 177, 189, 362, 442, 965)
y <- c(.40, .60, .66, .61, .69, .99)
plot(x, y)
plot(x, y)
lm(y~x)
aov.1 <- aov(x, y)
aov.1 <- aov(y, x)
aov.1 <- aov(y~x)
aov.1
summary(y~x)
aov.1 <- aov(y~x)
summary(y~x)
aov.1 <- aov(y~x)
aov.1
aov.1
#c.)
summary.lm(aov(y~x))
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project')
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project')
source('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project/world_map.R', echo=TRUE)
setwd("C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project")
source('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project/world_map.R', echo=TRUE)
#Read in Country Affirmative Asylum Data
affirmative <- read.csv("Refugees/country_affirmative_asylum.csv",
stringsAsFactors = FALSE)
#Make data frame from 2008 - 2016
affirmative <- affirmative %>%
select(Country, X2008, X2009, X2010, X2011, X2012, X2013, X2014, X2015, X2016)
runApp()
runApp()
runApp()
