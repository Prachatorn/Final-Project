)
),
mainPanel(
tableOutput("Table Description")
)
)
),
tabPanel(
"Scatter",
titlePanel("Percent Poverty For Children vs Adults"),
sidebarLayout(
sidebarPanel(
textInput(
"search",
label = "Find a State",
value = ""
),
textInput(
"search",
label = "Find a County",
value = ""
),
mainPanel(
plotlyOutput("scatter")
)
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
library(plotly)
library(plotly)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Exercises/exercises-Prachatorn/chapter-19-exercises/exercise-7')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
state_data <- function(state_choice) {
choice <- midwest_data %>%
filter(
state == state_choice
)
}
textInput(
"state_search",
label = "Find a state",
value = ""
),
mainPanel(
tableOutput("Table")
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
library(knitr)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shinyUI(
navbarPage(
"Midwest",
tabPanel(
"Table",
titlePanel("State and County Table"),
sidebarLayout(
sidebarPanel(
textInput(
"state_search",
label = "Find a state",
value = ""
)
),
mainPanel(
kable(tableOutput("Table"))
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
return(input$state_search)
shinyServer(function(input, output) {
output$Table <- renderTable({
state_data <- function(state_choice) {
choice <- midwest_data %>%
filter(
state == state_choice
)
}
return(input$state_search)
})
}
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Exercises/exercises-Prachatorn/chapter-19-exercises/exercise-1')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
View(midwest)
colnames(midwest)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
?plot
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
?plot_ly
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
output$Scatter <- renderPlotly({
if (input$state_search %in% midwest$state) {
choice2 <- midwest %>%
filter(
state == input$state_search
)
make_plot <- plotly(
choice2$percchildbelowpovert,
choice2$percadultpoverty,
xlab = "Children Below Poverty Percentage",
ylab = "Adult Below Poverty Percentage",
main = paste0("Poverty Percentage Between Children and Adults in ",
input$state_search))
} else {
choice2 <- "Not Available"
}
return(choice2)
})
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
choice2 <- midwest %>%
filter(
state == "IL"
)
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers"
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = county
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0(county)
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0("county: ", county)
)
make_plot
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
shinyServer(function(input, output) {
output$Table <- renderTable({
if (input$state_search %in% midwest$state) {
choice <- midwest_data %>%
filter(
state == input$state_search
)
if (input$county_search %in% midwest$county) {
choice <- choice %>%
filter(
county == input$county_search
)
} else {
return(choice)
}
} else {
choice <- "Not Available"
}
return(choice)
})
output$Scatter <- renderPlotly({
state_data <- midwest %>%
filter(
state == input$state_search
)
make_plot <- plot_ly(
data = state_data,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0("county: ", county)
)
return(make_plot)
})
output$Bar_Graph <- renderPlot({
if(input$state_search %in% midwest$state &
input$county_search %in% midwest$county) {
separate <- midwest %>%
filter(
state == input$state_search,
county == input$county_search
)
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
percrace <- as.data.frame(percrace)
bar_graph <- ggplot(hello) +
geom_bar(mapping = aes(race, percvalue), stat = "identity")
return(bar_graph)
} else {
data <- "Not Available"
return(data)
}
})
})
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
separate <- midwest %>%
filter(
state == "IL",
county == "ADAMS"
)
hello <- list()
hello$race <- c("white", "black", "amerindan", "asian", "other")
hello$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
hello <- as.data.frame(hello)
bar_graph <- ggplot(hello) +
geom_col(mapping = aes(race, percvalue), stat = "identity")
hello <- as.data.frame(hello)
bar_graph <- ggplot(hello) +
geom_col(mapping = aes(race, percvalue))
bar_graph
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
percrace$colors <- c("red", "blue", "green", "yellow", "purple")
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
sample.mean <- c(10.5, 14.8, 15.7, 10.0, 21.6)
sample.sd <- c(4.5, 6.8, 6.5, 6.7, 6.0)
aov.1 <- aov(sample.mean)
aov.1 <- aov(sample.mean~sample.sd)
aov.1
sumarry(aov.1)
summary(aov.1)
aov.1 <- aov(sample.mean)
aov.1 <- aov(sample.sd~sample.mean)
summary(aov.1)
sse(sample.mean)
sse(sample.mean, sample())
x <- c(89, 177, 189, 362, 442, 965)
y <- c(.40, .60, .66, .61, .69, .99)
plot(x, y)
plot(x, y)
lm(y~x)
aov.1 <- aov(x, y)
aov.1 <- aov(y, x)
aov.1 <- aov(y~x)
aov.1
summary(y~x)
aov.1 <- aov(y~x)
summary(y~x)
aov.1 <- aov(y~x)
aov.1
aov.1
#c.)
summary.lm(aov(y~x))
#affirmative_map <- function(years) {
affirm_map <- plot_geo(affirmative_country) %>%
add_trace(
z = ~year_2007,
color = ~year_2007,
colors = "Reds",
text = ~country,
locations = ~code,
marker = list(
line = list(
color = toRGB("black"),
width = 0.5
)
)
) %>%
colorbar(
title = "# Of People"
) %>%
layout(
title = "Affirmative Asylums to the US From Around The World",
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = "Mercator")
)
)
affirm_map
library(plotly)
library(dplyr)
source('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project/world_map.R', echo=TRUE)
setwd("C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project")
library(plotly)
library(dplyr)
affirmative_asylum <- read.csv("Refugees/country_affirmative_asylum.csv",
stringsAsFactors = F)
defensive_asylum <- read.csv("Refugees/country_defensive_asylum.csv",
stringsAsFactors = F)
colnames(affirmative_asylum)[colnames(affirmative_asylum) ==
"ï..Country"] <- "country"
affirmative <- affirmative_asylum %>%
filter(code != "NA")
affirmative[affirmative == "-"] <- 0
affirmative[affirmative == "D"] <- 0
affirmative <- affirmative %>%
rename_at(
vars(starts_with("X")),
funs(sub("X", "year_", .))
)
affirmative[affirmative == "X"] <- 0
affirmative$year_2008 <- gsub(",", "", affirmative$year_2008)
affirmative$year_2007 <- gsub(",", "", affirmative$year_2007)
affirmative$year_2009 <- gsub(",", "", affirmative$year_2009)
affirmative$year_2010 <- gsub(",", "", affirmative$year_2010)
affirmative$year_2011 <- gsub(",", "", affirmative$year_2011)
affirmative$year_2012 <- gsub(",", "", affirmative$year_2012)
affirmative$year_2013 <- gsub(",", "", affirmative$year_2013)
affirmative$year_2014 <- gsub(",", "", affirmative$year_2014)
affirmative$year_2016 <- gsub(",", "", affirmative$year_2016)
affirmative$year_2015 <- gsub(",", "", affirmative$year_2015)
affirmative_country <- affirmative %>%
select(
country
)
suppressWarnings(num_affirmative <- data.matrix(affirmative[2:11]))
affirmative_country <- affirmative_country %>%
mutate(
year_2007 = num_affirmative[, 1],
year_2008 = num_affirmative[, 2],
year_2009 = num_affirmative[, 3],
year_2010 = num_affirmative[, 4],
year_2011 = num_affirmative[, 5],
year_2012 = num_affirmative[, 6],
year_2013 = num_affirmative[, 7],
year_2014 = num_affirmative[, 8],
year_2015 = num_affirmative[, 9],
year_2016 = num_affirmative[, 10],
code = affirmative[, 12]
)
affirmative_country <- data.frame(affirmative_country)
#affirmative_map <- function(years) {
affirm_map <- plot_geo(affirmative_country) %>%
add_trace(
z = ~year_2007,
color = ~year_2007,
colors = "Reds",
text = ~country,
locations = ~code,
marker = list(
line = list(
color = toRGB("black"),
width = 0.5
)
)
) %>%
colorbar(
title = "# Of People"
) %>%
layout(
title = "Affirmative Asylums to the US From Around The World",
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = "Mercator")
)
)
affirm_map
affirmative_map <- function(years) {
affirm_map <- plot_geo(affirmative_country) %>%
add_trace(
z = ~paste0("year_", years),
color = ~year_2007,
colors = "Reds",
text = ~country,
locations = ~code,
marker = list(
line = list(
color = toRGB("black"),
width = 0.5
)
)
) %>%
colorbar(
title = "# Of People"
) %>%
layout(
title = "Affirmative Asylums to the US From Around The World",
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = "Mercator")
)
)
return(affirm_map)
}
affirmative_map(2007)
