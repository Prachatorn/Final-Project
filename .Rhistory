sidebarLayout(
sidebarPanel(
textInput(
"state_search",
label = "Find a state",
value = ""
),
textInput(
"county_search",
label = "Find a county",
value = ""
)
),
mainPanel(
tableOutput("Table Description")
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
midwest_data <- midwest
View(midwest_data)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
colnames(midwest)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
# Reading in the dataset
midwest <- midwest
shinyUI(
navbarPage(
"Midwest",
tabPanel(
"Table description",
titlePanel("State and County Table"),
sidebarLayout(
sidebarPanel(
textInput(
"state_search",
label = "Find a state",
value = ""
),
textInput(
"county_search",
label = "Find a county",
value = ""
)
),
mainPanel(
tableOutput("Table Description")
)
)
),
tabPanel(
"Scatter",
titlePanel("Percent Poverty For Children vs Adults"),
sidebarLayout(
sidebarPanel(
textInput(
"search",
label = "Find a State",
value = ""
),
textInput(
"search",
label = "Find a County",
value = ""
),
mainPanel(
plotlyOutput("scatter")
)
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
library(plotly)
library(plotly)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Exercises/exercises-Prachatorn/chapter-19-exercises/exercise-7')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
state_data <- function(state_choice) {
choice <- midwest_data %>%
filter(
state == state_choice
)
}
textInput(
"state_search",
label = "Find a state",
value = ""
),
mainPanel(
tableOutput("Table")
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
library(knitr)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shinyUI(
navbarPage(
"Midwest",
tabPanel(
"Table",
titlePanel("State and County Table"),
sidebarLayout(
sidebarPanel(
textInput(
"state_search",
label = "Find a state",
value = ""
)
),
mainPanel(
kable(tableOutput("Table"))
)
)
)
)
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
return(input$state_search)
shinyServer(function(input, output) {
output$Table <- renderTable({
state_data <- function(state_choice) {
choice <- midwest_data %>%
filter(
state == state_choice
)
}
return(input$state_search)
})
}
)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Exercises/exercises-Prachatorn/chapter-19-exercises/exercise-1')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
View(midwest)
colnames(midwest)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
?plot
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
?plot_ly
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
output$Scatter <- renderPlotly({
if (input$state_search %in% midwest$state) {
choice2 <- midwest %>%
filter(
state == input$state_search
)
make_plot <- plotly(
choice2$percchildbelowpovert,
choice2$percadultpoverty,
xlab = "Children Below Poverty Percentage",
ylab = "Adult Below Poverty Percentage",
main = paste0("Poverty Percentage Between Children and Adults in ",
input$state_search))
} else {
choice2 <- "Not Available"
}
return(choice2)
})
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
county <- midwest %>%
filter(state == "IL",
county ==" ADAMS")
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
choice2 <- midwest %>%
filter(
state == "IL"
)
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers"
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = county
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0(county)
)
make_plot
make_plot <- plot_ly(
choice2,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0("county: ", county)
)
make_plot
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
shinyServer(function(input, output) {
output$Table <- renderTable({
if (input$state_search %in% midwest$state) {
choice <- midwest_data %>%
filter(
state == input$state_search
)
if (input$county_search %in% midwest$county) {
choice <- choice %>%
filter(
county == input$county_search
)
} else {
return(choice)
}
} else {
choice <- "Not Available"
}
return(choice)
})
output$Scatter <- renderPlotly({
state_data <- midwest %>%
filter(
state == input$state_search
)
make_plot <- plot_ly(
data = state_data,
x = ~percadultpoverty,
y = ~percchildbelowpovert,
type = "scatter",
mode = "markers",
text = ~paste0("county: ", county)
)
return(make_plot)
})
output$Bar_Graph <- renderPlot({
if(input$state_search %in% midwest$state &
input$county_search %in% midwest$county) {
separate <- midwest %>%
filter(
state == input$state_search,
county == input$county_search
)
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
percrace <- as.data.frame(percrace)
bar_graph <- ggplot(hello) +
geom_bar(mapping = aes(race, percvalue), stat = "identity")
return(bar_graph)
} else {
data <- "Not Available"
return(data)
}
})
})
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
separate <- midwest %>%
filter(
state == "IL",
county == "ADAMS"
)
hello <- list()
hello$race <- c("white", "black", "amerindan", "asian", "other")
hello$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
hello <- as.data.frame(hello)
bar_graph <- ggplot(hello) +
geom_col(mapping = aes(race, percvalue), stat = "identity")
hello <- as.data.frame(hello)
bar_graph <- ggplot(hello) +
geom_col(mapping = aes(race, percvalue))
bar_graph
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
shiny::runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
percrace$colors <- c("red", "blue", "green", "yellow", "purple")
percrace <- list()
percrace$race <- c("white", "black", "amerindan", "asian", "other")
percrace$percvalue <- c(separate$percwhite, separate$percblack,
separate$percamerindan, separate$percasian,
separate$percother)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
# Load in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(plotly)
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
runApp('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Assignments/a8-Prachatorn')
sample.mean <- c(10.5, 14.8, 15.7, 10.0, 21.6)
sample.sd <- c(4.5, 6.8, 6.5, 6.7, 6.0)
aov.1 <- aov(sample.mean)
aov.1 <- aov(sample.mean~sample.sd)
aov.1
sumarry(aov.1)
summary(aov.1)
aov.1 <- aov(sample.mean)
aov.1 <- aov(sample.sd~sample.mean)
summary(aov.1)
sse(sample.mean)
sse(sample.mean, sample())
country_arrivals <- read.csv("Refugees/country_arrivals.csv",
stringsAsFactors = F)
regional_arrivals <- read.csv("Refugees/regional_arrivals.csv",
stringsAsFactors = F)
setnames(regional_arrivals, old=c("X2007","X2008", "X2009", "X2010", "X2011",
"X2012", "X2013", "X2014", "X2015", "X2016"),
new=c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014",
"2015", "2016"))
setwd("C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project")
regional_arrivals <- read.csv("Refugees/regional_arrivals.csv",
stringsAsFactors = F)
setnames(regional_arrivals, old=c("X2007","X2008", "X2009", "X2010", "X2011",
"X2012", "X2013", "X2014", "X2015", "X2016"),
new=c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014",
"2015", "2016"))
library(data.table)
regional_arrivals <- read.csv("Refugees/regional_arrivals.csv",
stringsAsFactors = F)
setnames(regional_arrivals, old=c("X2007","X2008", "X2009", "X2010", "X2011",
"X2012", "X2013", "X2014", "X2015", "X2016"),
new=c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014",
"2015", "2016"))
regional_arrivals[,-1] <- suppressWarnings(as.numeric(gsub(",", "",
as.matrix(
regional_arrivals[,-1]))))
regional_arrivals[is.na(regional_arrivals)] <- 0
newdata <- list()
newdata$years <- c(2008:2016)
newdata$africa <- c(regional_arrivals$`2008`[2],
regional_arrivals$`2009`[2],regional_arrivals$`2010`[2],
regional_arrivals$`2011`[2], regional_arrivals$`2012`[2],
regional_arrivals$`2013`[2], regional_arrivals$`2014`[2],
regional_arrivals$`2015`[2], regional_arrivals$`2016`[2])
newdata$asia <- c(regional_arrivals$`2008`[3],
regional_arrivals$`2009`[3],regional_arrivals$`2010`[3],
regional_arrivals$`2011`[3], regional_arrivals$`2012`[3],
regional_arrivals$`2013`[3], regional_arrivals$`2014`[3],
regional_arrivals$`2015`[3], regional_arrivals$`2016`[3])
newdata$europe <- c(regional_arrivals$`2008`[4],
regional_arrivals$`2009`[4],regional_arrivals$`2010`[4],
regional_arrivals$`2011`[4], regional_arrivals$`2012`[4],
regional_arrivals$`2013`[4], regional_arrivals$`2014`[4],
regional_arrivals$`2015`[4], regional_arrivals$`2016`[4])
newdata$north_america <- c(regional_arrivals$`2008`[5],
regional_arrivals$`2009`[5],regional_arrivals$`2010`[5],
regional_arrivals$`2011`[5], regional_arrivals$`2012`[5],
regional_arrivals$`2013`[5], regional_arrivals$`2014`[5],
regional_arrivals$`2015`[5], regional_arrivals$`2016`[5])
newdata$oceania <- c(regional_arrivals$`2008`[6],
regional_arrivals$`2009`[6],regional_arrivals$`2010`[6],
regional_arrivals$`2011`[6], regional_arrivals$`2012`[6],
regional_arrivals$`2013`[6], regional_arrivals$`2014`[6],
regional_arrivals$`2015`[6], regional_arrivals$`2016`[6])
newdata$south_america <- c(regional_arrivals$`2008`[7],
regional_arrivals$`2009`[7],regional_arrivals$`2010`[7],
regional_arrivals$`2011`[7], regional_arrivals$`2012`[7],
regional_arrivals$`2013`[7], regional_arrivals$`2014`[7],
regional_arrivals$`2015`[7], regional_arrivals$`2016`[7])
newdata$unknown <- c(regional_arrivals$`2008`[8],
regional_arrivals$`2009`[8],regional_arrivals$`2010`[8],
regional_arrivals$`2011`[8], regional_arrivals$`2012`[8],
regional_arrivals$`2013`[8], regional_arrivals$`2014`[8],
regional_arrivals$`2015`[8], regional_arrivals$`2016`[8])
regionals <- data.frame(newdata)
library(dplyr)
library(data.table)
regional_arrivals <- read.csv("Refugees/regional_arrivals.csv",
stringsAsFactors = F)
setnames(regional_arrivals, old=c("X2007","X2008", "X2009", "X2010", "X2011",
"X2012", "X2013", "X2014", "X2015", "X2016"),
new=c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014",
"2015", "2016"))
regional_arrivals[,-1] <- suppressWarnings(as.numeric(gsub(",", "",
as.matrix(
regional_arrivals[,-1]))))
regional_arrivals[is.na(regional_arrivals)] <- 0
newdata <- list()
newdata$years <- c(2008:2016)
newdata$africa <- c(regional_arrivals$`2008`[2],
regional_arrivals$`2009`[2],regional_arrivals$`2010`[2],
regional_arrivals$`2011`[2], regional_arrivals$`2012`[2],
regional_arrivals$`2013`[2], regional_arrivals$`2014`[2],
regional_arrivals$`2015`[2], regional_arrivals$`2016`[2])
source('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project/regionals.R', echo=TRUE)
View(regionals)
source("countries.R")
shiny::runApp()
library(data.table)
country_arrivals <- read.csv("Refugees/country_arrivals.csv",
stringsAsFactors = F)
source('C:/Users/somch/OneDrive - UW/Infomatics/INFO 201 - Technical Foundations/Final Project/Final-Project/countries.R', echo=TRUE)
#Read in packages
library(dplyr)
library(ggplot2)
library(shiny)
library(tidyr)
library(rsconnect)
source("regionals.R")
source("countries.R")
